{
  "operations": {
    "tag.changelog": {
      "description": "Generates the changelog for the current release",
      "method": "POST",
      "path": "\/document\/:user\/:document\/changelog",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "Passthru"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "TagChangelog"
        }
      },
      "stability": 1,
      "security": [
        "tag"
      ],
      "authorization": true,
      "tags": [
        "tag"
      ]
    },
    "tag.create": {
      "description": "Creates a new tag",
      "method": "POST",
      "path": "\/document\/:user\/:document\/tag",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "Passthru"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "tag"
      ],
      "authorization": true,
      "tags": [
        "tag"
      ]
    },
    "tag.get": {
      "description": "Returns a tag",
      "method": "GET",
      "path": "\/document\/:user\/:document\/tag\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Tag"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "tag"
      ]
    },
    "tag.getAll": {
      "description": "Returns all tags for a document",
      "method": "GET",
      "path": "\/document\/:user\/:document\/tag",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "TagCollection"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "tag"
      ]
    },
    "star.getAll": {
      "description": "Returns all stared documents for the current user",
      "method": "GET",
      "path": "\/star",
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "DocumentCollection"
        }
      },
      "stability": 1,
      "security": [
        "star"
      ],
      "authorization": true,
      "tags": [
        "star"
      ]
    },
    "repository.delete": {
      "description": "Removes a repository",
      "method": "DELETE",
      "path": "\/document\/:user\/:document\/repository\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "repository"
      ],
      "authorization": true,
      "tags": [
        "repository"
      ]
    },
    "repository.create": {
      "description": "Creates a new repository",
      "method": "POST",
      "path": "\/document\/:user\/:document\/repository",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "RepositoryCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "repository"
      ],
      "authorization": true,
      "tags": [
        "repository"
      ]
    },
    "repository.get": {
      "description": "Returns a repository",
      "method": "GET",
      "path": "\/document\/:user\/:document\/repository\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Repository"
        }
      },
      "stability": 1,
      "security": [
        "repository"
      ],
      "authorization": true,
      "tags": [
        "repository"
      ]
    },
    "repository.getAll": {
      "description": "Returns all configured repositories",
      "method": "GET",
      "path": "\/document\/:user\/:document\/repository",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "RepositoryCollection"
        }
      },
      "stability": 1,
      "security": [
        "repository"
      ],
      "authorization": true,
      "tags": [
        "repository"
      ]
    },
    "pull_request.reactComment": {
      "description": "Reacts to a comment",
      "method": "POST",
      "path": "\/document\/:user\/:document\/pull_request\/:id\/comment\/:comment\/:reaction",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "comment": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "reaction": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "Passthru"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "pull_request"
      ],
      "authorization": true,
      "tags": [
        "pull_request"
      ]
    },
    "pull_request.createComment": {
      "description": "Creates a new issue comment",
      "method": "POST",
      "path": "\/document\/:user\/:document\/pull_request\/:id\/comment",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "CommentCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "pull_request"
      ],
      "authorization": true,
      "tags": [
        "pull_request"
      ]
    },
    "pull_request.getAllComments": {
      "description": "Shows all pull request comments",
      "method": "GET",
      "path": "\/document\/:user\/:document\/pull_request\/:id\/comment",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "CommentCollection"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "pull_request"
      ]
    },
    "pull_request.delete": {
      "description": "Removes a pull request",
      "method": "DELETE",
      "path": "\/document\/:user\/:document\/pull_request\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "pull_request"
      ],
      "authorization": true,
      "tags": [
        "pull_request"
      ]
    },
    "pull_request.update": {
      "description": "Merges a pull request",
      "method": "PUT",
      "path": "\/document\/:user\/:document\/pull_request\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "Passthru"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "pull_request"
      ],
      "authorization": true,
      "tags": [
        "pull_request"
      ]
    },
    "pull_request.create": {
      "description": "Creates a new pull request",
      "method": "POST",
      "path": "\/document\/:user\/:document\/pull_request",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "PullRequestCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "pull_request"
      ],
      "authorization": true,
      "tags": [
        "pull_request"
      ]
    },
    "pull_request.get": {
      "description": "Returns an pull request",
      "method": "GET",
      "path": "\/document\/:user\/:document\/pull_request\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "PullRequest"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "pull_request"
      ]
    },
    "pull_request.getAll": {
      "description": "Returns all issues",
      "method": "GET",
      "path": "\/document\/:user\/:document\/pull_request",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "status": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "PullRequestCollection"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "pull_request"
      ]
    },
    "issue.reactComment": {
      "description": "Reacts to a comment",
      "method": "POST",
      "path": "\/document\/:user\/:document\/issue\/:id\/comment\/:comment\/:reaction",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "comment": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "reaction": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "Passthru"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "issue"
      ],
      "authorization": true,
      "tags": [
        "issue"
      ]
    },
    "issue.createComment": {
      "description": "Creates a new issue comment",
      "method": "POST",
      "path": "\/document\/:user\/:document\/issue\/:id\/comment",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "CommentCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "issue"
      ],
      "authorization": true,
      "tags": [
        "issue"
      ]
    },
    "issue.getAllComments": {
      "description": "Shows all issue comments",
      "method": "GET",
      "path": "\/document\/:user\/:document\/issue\/:id\/comment",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "CommentCollection"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "issue"
      ]
    },
    "issue.delete": {
      "description": "Removes an issue",
      "method": "DELETE",
      "path": "\/document\/:user\/:document\/issue\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "issue"
      ],
      "authorization": true,
      "tags": [
        "issue"
      ]
    },
    "issue.create": {
      "description": "Creates a new issue",
      "method": "POST",
      "path": "\/document\/:user\/:document\/issue",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "IssueCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "issue"
      ],
      "authorization": true,
      "tags": [
        "issue"
      ]
    },
    "issue.get": {
      "description": "Returns an issue",
      "method": "GET",
      "path": "\/document\/:user\/:document\/issue\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Issue"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "issue"
      ]
    },
    "issue.getAll": {
      "description": "Returns all issues",
      "method": "GET",
      "path": "\/document\/:user\/:document\/issue",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "status": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "IssueCollection"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "issue"
      ]
    },
    "explore.getAll": {
      "description": "Returns trending documents",
      "method": "GET",
      "path": "\/explore",
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "DocumentCollection"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "explore"
      ]
    },
    "document.revert": {
      "description": "Reverts your document to this commit",
      "method": "POST",
      "path": "\/document\/:user\/:document\/revert\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "Passthru"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "document"
      ],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.reset": {
      "description": "Reverts your document to the latest source",
      "method": "POST",
      "path": "\/document\/:user\/:document\/reset",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "Passthru"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "document"
      ],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.fork": {
      "description": "Export this document",
      "method": "GET",
      "path": "\/document\/:user\/:document\/fork",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "document"
      ],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.import": {
      "description": "Import a TypeSchema document",
      "method": "POST",
      "path": "\/document\/:user\/:document\/import",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "Passthru"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "document"
      ],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.export": {
      "description": "Export this document",
      "method": "POST",
      "path": "\/document\/:user\/:document\/export",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "DocumentExportRequest"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "DocumentExportResponse"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.star": {
      "description": "Stars this document",
      "method": "POST",
      "path": "\/document\/:user\/:document\/star",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "Passthru"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "document"
      ],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.delete": {
      "description": "Removes a document",
      "method": "DELETE",
      "path": "\/document\/:user\/:document",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "document"
      ],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.meta": {
      "description": "Updates the meta data of an document",
      "method": "PUT",
      "path": "\/document\/:user\/:document\/meta",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "DocumentMeta"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "document"
      ],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.update": {
      "description": "Updates a document",
      "method": "PUT",
      "path": "\/document\/:user\/:document",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "DocumentUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "document"
      ],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.create": {
      "description": "Creates a new document",
      "method": "POST",
      "path": "\/document\/:user",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "DocumentCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "stability": 1,
      "security": [
        "document"
      ],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.showPreview": {
      "description": "Returns a document preview",
      "method": "GET",
      "path": "\/document\/:user\/:document\/preview",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "version": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "DocumentPreview"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.get": {
      "description": "Returns a document",
      "method": "GET",
      "path": "\/document\/:user\/:document",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "version": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Document"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "document.getAll": {
      "description": "Returns all documents",
      "method": "GET",
      "path": "\/document\/:user",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "DocumentCollection"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "document"
      ]
    },
    "commit.get": {
      "description": "Returns a commit",
      "method": "GET",
      "path": "\/document\/:user\/:document\/commit\/:id",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Commit"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "commit"
      ]
    },
    "commit.getAll": {
      "description": "Returns all commits for a document",
      "method": "GET",
      "path": "\/document\/:user\/:document\/commit",
      "arguments": {
        "user": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "document": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "return": {
        "code": 200,
        "schema": {
          "$ref": "CommitCollection"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "commit"
      ]
    },
    "meta.getAbout": {
      "description": "",
      "method": "GET",
      "path": "\/",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "About"
        }
      },
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": []
    }
  },
  "definitions": {
    "About": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "termsOfService": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "contactUrl": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "licenseName": {
          "type": "string"
        },
        "licenseUrl": {
          "type": "string"
        },
        "paymentCurrency": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apps": {
          "$ref": "AboutApps"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "AboutLink"
          }
        }
      }
    },
    "AboutApps": {
      "type": "object",
      "additionalProperties": {
        "$ref": null
      }
    },
    "AboutLink": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string"
        },
        "href": {
          "type": "string"
        }
      }
    },
    "Collection": {
      "type": "object",
      "properties": {
        "totalResults": {
          "type": "integer"
        },
        "startIndex": {
          "type": "integer"
        },
        "itemsPerPage": {
          "type": "integer"
        },
        "entry": {
          "type": "array",
          "items": {
            "$generic": "T"
          }
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "user": {
          "$ref": "User"
        },
        "status": {
          "type": "integer"
        },
        "reaction": {
          "$ref": "CommentReactions"
        },
        "comment": {
          "type": "string"
        },
        "updateDate": {
          "type": "string",
          "format": "date-time"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CommentCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Comment"
      }
    },
    "CommentCreate": {
      "type": "object",
      "$extends": "Comment"
    },
    "CommentReactions": {
      "type": "object",
      "properties": {
        "like": {
          "type": "integer"
        },
        "dislike": {
          "type": "integer"
        },
        "laugh": {
          "type": "integer"
        },
        "hooray": {
          "type": "integer"
        },
        "confused": {
          "type": "integer"
        },
        "heart": {
          "type": "integer"
        },
        "rocket": {
          "type": "integer"
        },
        "eyes": {
          "type": "integer"
        }
      }
    },
    "Commit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "document": {
          "$ref": "Document"
        },
        "user": {
          "$ref": "User"
        },
        "previous": {
          "$ref": "CommitPrevious"
        },
        "message": {
          "type": "string"
        },
        "commitHash": {
          "type": "string"
        },
        "spec": {
          "type": "any"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CommitCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Commit"
      }
    },
    "CommitPrevious": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "commitHash": {
          "type": "string"
        },
        "spec": {
          "type": "any"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "user": {
          "$ref": "User"
        },
        "source": {
          "$ref": "Document"
        },
        "status": {
          "type": "integer"
        },
        "stars": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "homepage": {
          "type": "string"
        },
        "license": {
          "type": "string"
        },
        "spec": {
          "type": "any"
        },
        "updateDate": {
          "type": "string",
          "format": "date-time"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DocumentCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Document"
      }
    },
    "DocumentCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "baseVersion": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "homepage": {
          "type": "string"
        },
        "license": {
          "type": "string"
        }
      }
    },
    "DocumentExportRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "DocumentExportResponse": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        }
      }
    },
    "DocumentMeta": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "homepage": {
          "type": "string"
        },
        "license": {
          "type": "string"
        }
      }
    },
    "DocumentPreview": {
      "type": "object",
      "properties": {
        "repositories": {
          "type": "array",
          "items": {
            "$ref": "Repository"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DocumentUpdate": {
      "type": "object",
      "properties": {
        "spec": {
          "type": "any"
        }
      }
    },
    "Issue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "user": {
          "$ref": "User"
        },
        "document": {
          "$ref": "Document"
        },
        "status": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "updateDate": {
          "type": "string",
          "format": "date-time"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "IssueCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Issue"
      }
    },
    "IssueCreate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Passthru": {
      "description": "No schema information available",
      "type": "object",
      "additionalProperties": {
        "$ref": null
      }
    },
    "PullRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "source": {
          "$ref": "Document"
        },
        "target": {
          "$ref": "Document"
        },
        "user": {
          "$ref": "User"
        },
        "title": {
          "type": "string"
        },
        "updateDate": {
          "type": "string",
          "format": "date-time"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PullRequestCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "PullRequest"
      }
    },
    "PullRequestCreate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Repository": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "user": {
          "$ref": "User"
        },
        "document": {
          "$ref": "Document"
        },
        "generator": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "folder": {
          "type": "string"
        },
        "config": {
          "type": "string"
        },
        "sync": {
          "type": "boolean"
        },
        "updateDate": {
          "type": "string",
          "format": "date-time"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RepositoryCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Repository"
      }
    },
    "RepositoryCreate": {
      "type": "object",
      "$extends": "Repository"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "document": {
          "$ref": "Document"
        },
        "user": {
          "$ref": "User"
        },
        "version": {
          "type": "string"
        },
        "changelog": {
          "type": "string"
        },
        "spec": {
          "type": "any"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TagChangelog": {
      "type": "object",
      "properties": {
        "master": {
          "type": "any"
        },
        "tag": {
          "type": "any"
        },
        "version": {
          "type": "string"
        },
        "changelog": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TagCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Tag"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}