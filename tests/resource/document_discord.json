{
  "baseUrl": "https://discord.com/api/v10",
  "security": {
    "type": "oauth2",
    "tokenUrl": "https://discord.com/api/oauth2/token",
    "authorizationUrl": "https://discord.com/oauth2/authorize"
  },
  "imports": [],
  "operations": [
    {
      "name": "channel.message.getAll",
      "description": "Retrieves the messages in a channel.",
      "httpMethod": "GET",
      "httpPath": "/channels/:channel_id/messages",
      "httpCode": 200,
      "arguments": [
        {
          "name": "channel_id",
          "in": "path",
          "type": "string"
        },
        {
          "name": "around",
          "in": "query",
          "type": "string"
        },
        {
          "name": "before",
          "in": "query",
          "type": "string"
        },
        {
          "name": "after",
          "in": "query",
          "type": "string"
        },
        {
          "name": "limit",
          "in": "query",
          "type": "integer"
        }
      ],
      "throws": [],
      "return": "Message",
      "returnShape": "array"
    },
    {
      "name": "channel.message.get",
      "description": "Retrieves a specific message in the channel. Returns a message object on success.",
      "httpMethod": "GET",
      "httpPath": "/channels/:channel_id/messages/:message_id",
      "httpCode": 200,
      "arguments": [
        {
          "name": "channel_id",
          "in": "path",
          "type": "string"
        },
        {
          "name": "message_id",
          "in": "path",
          "type": "string"
        }
      ],
      "throws": [],
      "return": "Message"
    },
    {
      "name": "channel.message.create",
      "description": "Post a message to a guild text or DM channel. Returns a message object. Fires a Message Create Gateway event. See message formatting for more information on how to properly format messages.",
      "httpMethod": "POST",
      "httpPath": "/channels/:channel_id/messages",
      "httpCode": 200,
      "arguments": [
        {
          "name": "channel_id",
          "in": "path",
          "type": "string"
        }
      ],
      "payload": "Message",
      "payloadShape": "array",
      "return": "Message",
      "returnShape": "array",
      "throws": [
        {
          "code": 400,
          "type": "Message",
          "typeShape": "array"
        }
      ]
    },
    {
      "name": "channel.message.remove",
      "description": "Delete a message. If operating on a guild channel and trying to delete a message that was not sent by the current user, this endpoint requires the MANAGE_MESSAGES permission.",
      "httpMethod": "DELETE",
      "httpPath": "/channels/:channel_id/messages/:message_id",
      "httpCode": 204,
      "arguments": [
        {
          "name": "channel_id",
          "in": "path",
          "type": "string"
        },
        {
          "name": "message_id",
          "in": "path",
          "type": "string"
        }
      ],
      "throws": []
    },
    {
      "name": "channel.message.crosspost",
      "description": "Crosspost a message in an Announcement Channel to following channels. This endpoint requires the SEND_MESSAGES permission, if the current user sent the message, or additionally the MANAGE_MESSAGES permission, for all other messages, to be present for the current user.",
      "httpMethod": "POST",
      "httpPath": "/channels/:channel_id/messages/:message_id/crosspost",
      "httpCode": 200,
      "arguments": [
        {
          "name": "channel_id",
          "in": "path",
          "type": "string"
        },
        {
          "name": "message_id",
          "in": "path",
          "type": "string"
        }
      ],
      "throws": [],
      "return": "Message"
    }
  ],
  "types": [
    {
      "name": "Message",
      "type": "struct",
      "description": "",
      "properties": [
        {
          "name": "content",
          "description": "Message contents (up to 2000 characters)",
          "type": "string"
        },
        {
          "name": "nonce",
          "description": "Can be used to verify a message was sent (up to 25 characters)",
          "type": "string"
        },
        {
          "name": "tts",
          "description": "true if this is a TTS message",
          "type": "boolean"
        },
        {
          "name": "embeds",
          "description": "Up to 10 rich embeds (up to 6000 characters)",
          "type": "array",
          "reference": "Message_Embed"
        },
        {
          "name": "allowed_mentions",
          "description": "",
          "type": "object",
          "reference": "Message_Allowed_Mentions"
        },
        {
          "name": "message_reference",
          "description": "",
          "type": "string"
        }
      ]
    },
    {
      "name": "Message_Embed",
      "type": "struct",
      "description": "",
      "properties": [
        {
          "name": "title",
          "description": "Title of embed",
          "type": "string"
        },
        {
          "name": "type",
          "description": "Type of embed (always \"rich\" for webhook embeds)",
          "type": "string"
        },
        {
          "name": "description",
          "description": "Description of embed",
          "type": "string"
        },
        {
          "name": "url",
          "description": "Url of embed",
          "type": "string"
        },
        {
          "name": "timestamp",
          "description": "Timestamp of embed content",
          "type": "string"
        },
        {
          "name": "color",
          "description": "Color code of the embed",
          "type": "integer"
        }
      ]
    },
    {
      "name": "Message_Allowed_Mentions",
      "type": "struct",
      "description": "",
      "properties": [
        {
          "name": "parse",
          "description": "An array of allowed mention types to parse from the content",
          "type": "array",
          "reference": "string"
        },
        {
          "name": "roles",
          "description": "Array of role_ids to mention (Max size of 100)",
          "type": "array",
          "reference": "string"
        },
        {
          "name": "users",
          "description": "Array of user_ids to mention (Max size of 100)",
          "type": "array",
          "reference": "string"
        },
        {
          "name": "replied_user",
          "description": "For replies, whether to mention the author of the message being replied to (default false)",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "Message_Reference",
      "type": "struct",
      "description": "",
      "properties": [
        {
          "name": "message_id",
          "description": "Id of the originating message",
          "type": "string"
        },
        {
          "name": "channel_id",
          "description": "Id of the originating message's channel",
          "type": "string"
        },
        {
          "name": "guild_id",
          "description": "Id of the originating message's guild",
          "type": "string"
        },
        {
          "name": "fail_if_not_exists",
          "description": "When sending, whether to error if the referenced message doesn't exist instead of sending as a normal (non-reply) message, default true",
          "type": "boolean"
        }
      ]
    }
  ]
}
